# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Dq3s-4pCMwwlSi_fjadOTFQRMB-F0dWA
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""Загружаем таблицу с данными аннотаций к нашему датасету"""

url='https://drive.google.com/file/d/1uIXAhjcQ63j78YygE39OqAf5QexCOqsb/view?usp=drive_link'
url='https://drive.google.com/uc?id=' + url.split('/')[-2]
df = pd.read_csv(url)
df.head()

"""Добавляем в таблицу необходимые столбцы и корректируем имеющиеся: меняем тип данных в class_id на int для удобства, добавляем единичку для корректной классификации, создаем столбец с текстовым названием классов объектов, в столбце 'image' обрезаем .txt, создаем столбец с площадью объекта"""

df['class_id'] = df['class_id'].astype('int')
df['class_id'] = df['class_id'] + 1
df['image'] = df['image'].apply(lambda x: x[:-4])
df['class_id'] = df['class_id'].astype(int)
def class_to_name(id):
  if id == 1:
    return 'bicycle'
  elif id == 2:
    return 'motorcycle'
  elif id == 3:
    return 'car'
  elif id == 4:
    return 'transporter (van)'
  elif id == 5:
    return 'bus'
  elif id == 6:
    return 'truck (others)'
  elif id == 8:
    return 'unknown'
  elif id == 9:
    return 'mask'
df['class_name'] = df['class_id'].apply(class_to_name)
df['bbox_square'] = df['width'] * df['height']

df.head()

"""Количество изображений в датасете. Количество объектов в изображении"""

df.info()
df['image'].nunique()

"""Среднее количество объектов на картинке"""

df['image'].count() / df['image'].nunique()

"""Распределение объектов разных классов в датасете"""

df.groupby(['class_name'])['image'].count()

"""Распределение объектов разных классов в датасете в процентом соотношении"""

df.groupby(['class_name'])['image'].count() / df['image'].count() * 100

sns.set_theme(style="darkgrid")
plot = sns.histplot(data=df, x="class_name")
plot.axes.set_title("Количество разных классов объектов", fontsize=16)
plot.set_xlabel("Классы объектов", fontsize=14)
plot.set_ylabel("Количество", fontsize=14);
plt.xticks(rotation=75)

"""Средний размер (площадь) bbox по классам"""

df.groupby(['class_name']).agg(mean = ('bbox_square', 'mean'))

sns.set_theme(style="darkgrid")
histplot = sns.histplot(data=df, x="class_name", y = 'bbox_square')
histplot.axes.set_title("Количество разных классов объектов", fontsize=16)
histplot.set_xlabel("Классы объектов", fontsize=14)
histplot.set_ylabel("Площадь", fontsize=14);
plt.xticks(rotation=75)
